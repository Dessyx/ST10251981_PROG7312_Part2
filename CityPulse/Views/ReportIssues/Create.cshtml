@{
    ViewData["Title"] = "Report an Issue";
}

<div class="container my-4">
    <div class="row g-4">
        <!-- Form -->
        <div class="col-lg-6">
            <form id="reportForm" asp-action="Create" asp-controller="ReportIssues" method="post" enctype="multipart/form-data">
                <h2>Report an Issue</h2>

                <div class="mb-3">
                    <label class="form-label">Form Progress</label>
                    <div class="progress">
                        <div id="formProgress" class="progress-bar" role="progressbar" style="width:0%; background: linear-gradient(to right, blue, green);">Step 1 of 3</div>
                    </div>
                </div>

                <!-- Step 1: Location -->
                <div class="form-step" data-step="0">
                    <div class="mb-3 position-relative">
                        <label for="location" class="form-label">Location <span class="text-danger">*</span></label>
                        <input id="location" name="location" class="form-control" placeholder="Start typing..." autocomplete="off" required>
                        <div id="suggestions" class="list-group"></div>
                        <div class="invalid-feedback">Please enter a location.</div>
                    </div>
                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-outline-dark rounded prev-btn" disabled>Back</button>
                        <button type="button" class="btn btn-outline-dark rounded next-btn" disabled>Next</button>
                    </div>
                </div>

                <!-- Step 2: Category -->
                <div class="form-step d-none" data-step="1">
                    <div class="mb-3">
                        <label for="category" class="form-label">Category <span class="text-danger">*</span></label>
                        <select id="category" name="category" class="form-select" required>
                            <option value="">Select category</option>
                            <option value="Sanitation">Sanitation</option>
                            <option value="Roads">Roads</option>
                            <option value="Utilities">Utilities</option>
                            <option value="Water">Water</option>
                            <option value="Electricity">Electricity</option>
                            <option value="Other">Other</option>
                        </select>
                        <div class="invalid-feedback">Please select a category.</div>
                    </div>
                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-outline-dark rounded prev-btn">Back</button>
                        <button type="button" class="btn btn-outline-dark rounded next-btn" disabled>Next</button>
                    </div>
                </div>

                <!-- Step 3: Description & Files -->
                <div class="form-step d-none" data-step="2">
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea id="description" name="description" class="form-control" rows="5"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Attach images/documents</label>
                        <input type="file" name="files" multiple class="form-control">
                    </div>
                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-outline-dark rounded prev-btn">Back</button>
                        <button type="submit" class="btn btn-success rounded">Submit</button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Map -->
        <div class="col-lg-6">
            <div id="map" style="width: 100%; height: 300px; border: 2px solid #ddd; border-radius: 10px;"></div>
        </div>
    </div>

    <!-- Confirmations -->
    <div class="row mt-3">
        <div class="col-12">
            <div class="p-2 card">
                <h5>Verify Reports</h5>
                <ul id="verifyList" class="list-group list-group-flush"></ul>
            </div>
        </div>
    </div>

    <!-- Stats -->
    <div class="row mt-3">
        <div class="col-12">
            <div class="p-2 card">
                <h5>Ward Stats</h5>
                <ul id="wardList" class="list-group list-group-flush"></ul>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
    let reports = [
        { ref: 'RPT-001', lat: -33.9249, lon: 18.4241, location: 'Cape Town CBD', status: 'reported', confirmations: { still: 0, fixed: 0 } },
        { ref: 'RPT-002', lat: -26.2041, lon: 28.0473, location: 'Johannesburg Central', status: 'needs-verification', confirmations: { still: 2, fixed: 1 } },
        { ref: 'RPT-003', lat: -29.8587, lon: 31.0218, location: 'Durban Central', status: 'resolved', confirmations: { still: 0, fixed: 3 } }
    ];

    const statusColors = { 'reported':'red', 'needs-verification':'yellow', 'resolved':'green' };
    let marker;

    const map = L.map('map').setView([-30.5595, 22.9375], 5);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    const locationInput = document.getElementById('location');
    const suggestions = document.getElementById('suggestions');
    const steps = document.querySelectorAll('.form-step');
    const progressBar = document.getElementById('formProgress');

   
    function addReportPin(report){
        const pin = L.circleMarker([report.lat, report.lon], {
            radius: 8,
            color: statusColors[report.status],
            fillColor: statusColors[report.status],
            fillOpacity: 0.7
        }).addTo(map);

        pin.bindPopup(`
            <b>${report.location}</b><br/>
            Ref: ${report.ref}<br/>
            Status: ${report.status}<br/>
            <button onclick="confirmReport('${report.ref}','still')">Still a Problem ?</button>
            <button onclick="confirmReport('${report.ref}','fixed')">Resolved ?</button>
        `);
        report.pin = pin;
    }

  
    function confirmReport(ref, type){
        const report = reports.find(r=>r.ref===ref);
        if(!report) return;

        report.confirmations[type]++;
        if(report.confirmations.fixed>=3) report.status='resolved';
        else if(report.confirmations.still>report.confirmations.fixed) report.status='needs-verification';
        else report.status='reported';

        report.pin.setStyle({color:statusColors[report.status], fillColor:statusColors[report.status]});
        renderWardStats();
        renderVerificationList();
        report.pin.closePopup();

        updateCompletionProgress();
    }


    function renderWardStats(){
        const wardList = document.getElementById('wardList');
        wardList.innerHTML='';
        const wardMap={};
        reports.forEach(r=>{
            const ward=r.location.split(' ')[0];
            if(!wardMap[ward]) wardMap[ward]={total:0,resolved:0,active:0};
            wardMap[ward].total++;
            if(r.status==='resolved') wardMap[ward].resolved++;
            else wardMap[ward].active++;
        });
        for(const ward in wardMap){
            const stats=wardMap[ward];
            const li=document.createElement('li');
            li.className='list-group-item';
            li.innerHTML=`
                ${ward} ? ${stats.total} reports, ${stats.resolved} resolved, ${stats.active} still active
                <div class="progress mt-1">
                    <div class="progress-bar" role="progressbar" style="width:${(stats.resolved/stats.total)*100}%">${Math.round((stats.resolved/stats.total)*100)}%</div>
                </div>
            `;
            wardList.appendChild(li);
        }
    }

 
    function renderVerificationList(){
        const verifyList = document.getElementById('verifyList');
        verifyList.innerHTML='';
        reports.forEach(r=>{
            const li=document.createElement('li');
            li.className='list-group-item d-flex justify-content-between align-items-center';
            li.innerHTML=`
                <div>
                    <strong>${r.location}</strong><br/>
                    <small>Status: ${r.status}</small>
                </div>
                <div>
                    <button class="btn btn-sm btn-outline-primary me-1" onclick="confirmReport('${r.ref}','still')">Still a Problem ?</button>
                    <button class="btn btn-sm btn-outline-success" onclick="confirmReport('${r.ref}','fixed')">Resolved ?</button>
                </div>
            `;
            verifyList.appendChild(li);
        });
    }


    let currentStep = 0;

    function showStep(stepIndex){
        steps.forEach((s,i)=> s.classList.toggle('d-none', i!==stepIndex));
        progressBar.style.width = ((stepIndex+1)/steps.length*100)+'%';
        progressBar.textContent = `Step ${stepIndex+1} of ${steps.length}`;
        checkStepFields(stepIndex);
    }

 
    function checkStepFields(stepIndex){
        const step = steps[stepIndex];
        let enable = true;
        if(stepIndex===0) enable = locationInput.value.trim() !== '';
        if(stepIndex===1) enable = document.getElementById('category').value !== '';
        step.querySelector('.next-btn').disabled = !enable;
    }

  
    function updateCompletionProgress(){
        let filled = 0;
        if(locationInput.value.trim()!=='') filled++;
        if(document.getElementById('category').value!=='') filled++;
        if(document.getElementById('description').value.trim()!=='') filled++;
        const percent = Math.round((filled/3)*100);
        progressBar.style.width = percent+'%';
    }

    document.querySelectorAll('.next-btn').forEach(btn=>btn.addEventListener('click', ()=>{
        if(currentStep < steps.length-1){
            currentStep++;
            showStep(currentStep);
        }
    }));

    document.querySelectorAll('.prev-btn').forEach(btn=>btn.addEventListener('click', ()=>{
        if(currentStep>0){
            currentStep--;
            showStep(currentStep);
        }
    }));

    locationInput.addEventListener('input', ()=>{
        checkStepFields(0);
        updateCompletionProgress();
    });


    document.getElementById('category').addEventListener('change', ()=>{
        checkStepFields(1);
        updateCompletionProgress();
    });

  
    document.getElementById('description').addEventListener('input', updateCompletionProgress);

 
    locationInput.addEventListener('input', async function(){
        const query = locationInput.value.trim();
        suggestions.innerHTML='';
        if(query.length<1) return;
        const res = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&countrycodes=ZA&limit=5&addressdetails=1`);
        const data = await res.json();
        data.forEach(place=>{
            const a = document.createElement('a');
            a.href='#';
            a.className='list-group-item list-group-item-action';
            a.textContent = place.display_name;
            a.addEventListener('click', function(e){
                e.preventDefault();
                locationInput.value = place.display_name;
                suggestions.innerHTML='';
                if(marker) map.removeLayer(marker);
                marker = L.marker([place.lat, place.lon]).addTo(map);
                map.setView([place.lat, place.lon],6); 
                checkStepFields(0);
            });
            suggestions.appendChild(a);
        });
    });

 
    document.getElementById('reportForm').addEventListener('submit', function(e){
        e.preventDefault();
        const newReport = {
            ref: 'RPT-'+(reports.length+1).toString().padStart(3,'0'),
            lat: marker ? marker.getLatLng().lat : -30.5595,
            lon: marker ? marker.getLatLng().lng : 22.9375,
            location: locationInput.value,
            status: 'reported',
            confirmations: {still:0,fixed:0}
        };
        reports.push(newReport);
        addReportPin(newReport);
        renderWardStats();
        renderVerificationList();

      
        alert('Report submitted! Returning to Home.');
        locationInput.value='';
        document.getElementById('category').value='';
        document.getElementById('description').value='';
        if(marker) map.removeLayer(marker); marker=null;
        currentStep = 0;
        showStep(currentStep);
        updateCompletionProgress();
    });


    reports.forEach(addReportPin);
    renderWardStats();
    renderVerificationList();
    showStep(currentStep);
</script>
